# Generated by Django 2.1.7 on 2019-03-15 17:42

from django.db import migrations
from django.conf import settings
import os.path
import csv
from django.core.files import File
from django.utils.text import slugify

def load_book_data(apps, schema_editor):
    """ Read a CSV file full of books and insert them into the database."""
    Book = apps.get_model('core', 'Book')
    Category = apps.get_model('core', 'Category')

    datapath = os.path.join(settings.BASE_DIR, 'images')
    datafile = os.path.join(datapath, 'book_data.csv')
    with open(datafile) as file:
        reader = csv.DictReader(file)
        for row in reader:
            print(row, file=open('file.txt', 'w'))
            title = row['title']
            # Don't create a book if title matches an existing book record
            if Book.objects.filter(title=title).count():
                continue

            if not row['categories']:
                categories, _ = Category.objects.get_or_create(name='No Category', slug="no-category")
                categories = [categories]
            else:
                categories = []
                category_list = [category.strip() for category in row['categories'].split('/')]
                for category in category_list:
                    new_category, _ = Category.objects.get_or_create(name=category, slug=slugify(category))
                    categories.append(new_category)

            book =Book.objects.create(
                title = row['title'],
                author = row['author'],
                description = row['description'],
                url = row['url'],
                slug = slugify(row['title'])[:50]
            )
            book.image.save(
                row['image'],
                File(open(os.path.join(datapath, row['image']), 'rb')))        

            for category in categories:
                book.categories.add(category)

        


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [migrations.RunPython(load_book_data)
    ]
